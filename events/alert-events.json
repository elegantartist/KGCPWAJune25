{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://keepgoingcare.com/schemas/events/alert-events.json",
  "title": "KGC Alert Events",
  "description": "Event schemas for alert and notification activities in the KGC Healthcare Platform",
  "type": "object",
  "oneOf": [
    {
      "$ref": "#/$defs/AlertGeneratedEvent"
    },
    {
      "$ref": "#/$defs/AlertReadEvent"
    },
    {
      "$ref": "#/$defs/AlertResolvedEvent"
    },
    {
      "$ref": "#/$defs/AlertEscalatedEvent"
    },
    {
      "$ref": "#/$defs/NotificationSentEvent"
    },
    {
      "$ref": "#/$defs/ReminderTriggeredEvent"
    },
    {
      "$ref": "#/$defs/EmergencyAlertEvent"
    }
  ],
  "$defs": {
    "BaseAlertEvent": {
      "type": "object",
      "required": ["eventId", "eventType", "timestamp"],
      "properties": {
        "eventId": {
          "type": "string",
          "format": "uuid"
        },
        "eventType": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "alertId": {
          "type": "integer",
          "minimum": 1,
          "description": "Alert record ID"
        },
        "patientId": {
          "type": "integer",
          "minimum": 1,
          "description": "Patient associated with alert"
        },
        "doctorId": {
          "type": "integer",
          "minimum": 1,
          "description": "Doctor receiving alert"
        },
        "sessionId": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "format": "ipv4"
        }
      }
    },
    "AlertGeneratedEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "alert_generated"
            },
            "data": {
              "type": "object",
              "required": ["alertType", "severity", "triggerCondition", "autoGenerated"],
              "properties": {
                "alertType": {
                  "type": "string",
                  "enum": ["missed_scores", "low_compliance", "emergency_keyword", "medication_concern", "diet_concern", "exercise_concern", "sentiment_negative", "engagement_drop"],
                  "description": "Type of alert generated"
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Alert severity level"
                },
                "triggerCondition": {
                  "type": "object",
                  "properties": {
                    "missedDays": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of consecutive missed submission days"
                    },
                    "complianceRate": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 1,
                      "description": "Compliance rate that triggered alert"
                    },
                    "thresholdValue": {
                      "type": "number",
                      "description": "Threshold value that was crossed"
                    },
                    "detectionRule": {
                      "type": "string",
                      "description": "Specific rule that triggered the alert"
                    }
                  },
                  "description": "Conditions that triggered the alert"
                },
                "autoGenerated": {
                  "type": "boolean",
                  "description": "Whether alert was automatically generated"
                },
                "patientInfo": {
                  "type": "object",
                  "properties": {
                    "patientName": {
                      "type": "string",
                      "description": "Patient name (redacted in logs)"
                    },
                    "patientUIN": {
                      "type": "string",
                      "pattern": "^KGC-PAT-\\d{3,}$",
                      "description": "Patient UIN"
                    },
                    "lastActivityDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of last patient activity"
                    },
                    "activeCPDsCount": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Number of active Care Plan Directives"
                    }
                  }
                },
                "alertMessage": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Generated alert message content"
                },
                "urgencyIndicators": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["multiple_missed_days", "declining_trend", "emergency_keywords", "medication_adherence", "significant_score_drop", "no_recent_engagement"]
                  },
                  "description": "Factors contributing to urgency"
                },
                "relatedDataPoints": {
                  "type": "object",
                  "properties": {
                    "healthScoreIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Related health score record IDs"
                    },
                    "cpdIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Related Care Plan Directive IDs"
                    },
                    "chatMessageIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Related chat message IDs"
                    }
                  }
                },
                "expectedResponse": {
                  "type": "string",
                  "enum": ["immediate_contact", "review_within_24h", "schedule_appointment", "modify_cpd", "increase_monitoring", "no_action_required"],
                  "description": "Expected doctor response"
                },
                "algorithmVersion": {
                  "type": "string",
                  "description": "Version of alert generation algorithm"
                },
                "riskScore": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "Calculated patient risk score"
                }
              }
            }
          }
        }
      ]
    },
    "AlertReadEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "alert_read"
            },
            "data": {
              "type": "object",
              "required": ["readBy", "readTime", "alertAge"],
              "properties": {
                "readBy": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "ID of user who read the alert"
                },
                "readTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When alert was read"
                },
                "alertAge": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Age of alert when read (minutes)"
                },
                "readMethod": {
                  "type": "string",
                  "enum": ["dashboard_view", "notification_click", "alert_panel", "email_link", "mobile_app"],
                  "description": "How the alert was accessed"
                },
                "alertType": {
                  "type": "string",
                  "enum": ["missed_scores", "low_compliance", "emergency_keyword", "medication_concern", "diet_concern", "exercise_concern", "sentiment_negative", "engagement_drop"],
                  "description": "Type of alert that was read"
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Severity of alert that was read"
                },
                "readerRole": {
                  "type": "string",
                  "enum": ["admin", "doctor", "patient"],
                  "description": "Role of person who read the alert"
                },
                "deviceType": {
                  "type": "string",
                  "enum": ["mobile", "tablet", "desktop", "unknown"],
                  "description": "Device used to read alert"
                },
                "responseTime": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Time from alert generation to read (minutes)"
                },
                "isFirstRead": {
                  "type": "boolean",
                  "description": "Whether this is the first time alert was read"
                },
                "contextualInfo": {
                  "type": "object",
                  "properties": {
                    "currentPatientStatus": {
                      "type": "string",
                      "enum": ["active", "inactive", "concerning", "improving"],
                      "description": "Patient status at time of reading"
                    },
                    "otherActiveAlerts": {
                      "type": "integer",
                      "minimum": 0,
                      "description": "Number of other active alerts for this patient"
                    },
                    "recentDoctorActivity": {
                      "type": "boolean",
                      "description": "Whether doctor has recent activity with this patient"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "AlertResolvedEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "alert_resolved"
            },
            "data": {
              "type": "object",
              "required": ["resolvedBy", "resolutionTime", "resolutionMethod", "outcome"],
              "properties": {
                "resolvedBy": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "ID of user who resolved the alert"
                },
                "resolutionTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When alert was resolved"
                },
                "alertLifetime": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Alert lifetime from generation to resolution (minutes)"
                },
                "resolutionMethod": {
                  "type": "string",
                  "enum": ["manual_resolution", "auto_resolution", "condition_improved", "patient_contacted", "cpd_updated", "escalated_and_resolved"],
                  "description": "How the alert was resolved"
                },
                "outcome": {
                  "type": "string",
                  "enum": ["patient_contacted", "cpd_modified", "medication_adjusted", "appointment_scheduled", "monitoring_increased", "false_positive", "no_action_needed"],
                  "description": "Outcome of alert resolution"
                },
                "resolutionNotes": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Notes about resolution (sensitive data redacted)"
                },
                "actionsTaken": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["patient_call", "email_sent", "cpd_update", "prescription_change", "appointment_booking", "family_contact", "emergency_referral"]
                  },
                  "description": "Specific actions taken to resolve alert"
                },
                "followUpRequired": {
                  "type": "boolean",
                  "description": "Whether follow-up action is required"
                },
                "followUpDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Scheduled follow-up date"
                },
                "patientResponseReceived": {
                  "type": "boolean",
                  "description": "Whether patient responded to resolution actions"
                },
                "effectivenessRating": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 5,
                  "description": "Effectiveness rating of alert (1-5)"
                },
                "wasEscalated": {
                  "type": "boolean",
                  "description": "Whether alert was escalated before resolution"
                },
                "resolutionComplexity": {
                  "type": "string",
                  "enum": ["simple", "moderate", "complex", "multi_step"],
                  "description": "Complexity of resolution process"
                }
              }
            }
          }
        }
      ]
    },
    "AlertEscalatedEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "alert_escalated"
            },
            "data": {
              "type": "object",
              "required": ["escalatedBy", "escalationReason", "escalatedTo", "originalSeverity", "newSeverity"],
              "properties": {
                "escalatedBy": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "ID of user who escalated the alert"
                },
                "escalationReason": {
                  "type": "string",
                  "enum": ["no_response", "condition_worsening", "emergency_detected", "patient_unreachable", "requires_specialist", "system_escalation"],
                  "description": "Reason for escalation"
                },
                "escalatedTo": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "ID of user receiving escalated alert"
                    },
                    "userRole": {
                      "type": "string",
                      "enum": ["admin", "senior_doctor", "specialist", "emergency_services", "supervisor"],
                      "description": "Role of person receiving escalation"
                    },
                    "department": {
                      "type": "string",
                      "description": "Department receiving escalation"
                    }
                  }
                },
                "originalSeverity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Original alert severity"
                },
                "newSeverity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "New severity after escalation"
                },
                "escalationTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When escalation occurred"
                },
                "timeToEscalation": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Time from alert generation to escalation (minutes)"
                },
                "escalationTrigger": {
                  "type": "string",
                  "enum": ["manual_decision", "auto_timeout", "condition_threshold", "emergency_keywords", "patient_request", "family_concern"],
                  "description": "What triggered the escalation"
                },
                "additionalContext": {
                  "type": "string",
                  "maxLength": 1000,
                  "description": "Additional context provided for escalation"
                },
                "urgencyFactors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["medical_emergency", "patient_safety", "medication_reaction", "mental_health_crisis", "family_concern", "regulatory_requirement"]
                  },
                  "description": "Factors contributing to urgency"
                },
                "notificationMethods": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["email", "sms", "phone_call", "in_app", "pager", "emergency_alert"]
                  },
                  "description": "Methods used to notify escalation recipient"
                },
                "expectedResponseTime": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Expected response time for escalated alert (minutes)"
                }
              }
            }
          }
        }
      ]
    },
    "NotificationSentEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "notification_sent"
            },
            "data": {
              "type": "object",
              "required": ["notificationType", "recipient", "channel", "deliveryStatus"],
              "properties": {
                "notificationType": {
                  "type": "string",
                  "enum": ["alert_notification", "reminder", "welcome_message", "progress_update", "appointment_reminder", "medication_reminder", "emergency_contact"],
                  "description": "Type of notification sent"
                },
                "recipient": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Recipient user ID"
                    },
                    "userRole": {
                      "type": "string",
                      "enum": ["admin", "doctor", "patient"],
                      "description": "Recipient role"
                    },
                    "contactMethod": {
                      "type": "string",
                      "description": "Contact method used (redacted for privacy)"
                    }
                  }
                },
                "channel": {
                  "type": "string",
                  "enum": ["email", "sms", "in_app", "push_notification", "phone_call", "postal_mail"],
                  "description": "Communication channel used"
                },
                "deliveryStatus": {
                  "type": "string",
                  "enum": ["sent", "delivered", "failed", "pending", "bounced", "blocked"],
                  "description": "Delivery status"
                },
                "messageId": {
                  "type": "string",
                  "description": "External message ID (e.g., from SendGrid, Twilio)"
                },
                "templateUsed": {
                  "type": "string",
                  "description": "Template identifier used for message"
                },
                "personalizedContent": {
                  "type": "boolean",
                  "description": "Whether content was personalized"
                },
                "urgencyLevel": {
                  "type": "string",
                  "enum": ["low", "normal", "high", "urgent"],
                  "description": "Urgency level of notification"
                },
                "deliveryAttempts": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Number of delivery attempts"
                },
                "contentLength": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Length of notification content"
                },
                "relatedAlertId": {
                  "type": "integer",
                  "description": "ID of related alert (if applicable)"
                },
                "scheduledTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Originally scheduled delivery time"
                },
                "actualDeliveryTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Actual delivery time"
                },
                "costIncurred": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Cost of sending notification (if applicable)"
                },
                "recipientTimezone": {
                  "type": "string",
                  "description": "Recipient's timezone for delivery optimization"
                }
              }
            }
          }
        }
      ]
    },
    "ReminderTriggeredEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "reminder_triggered"
            },
            "data": {
              "type": "object",
              "required": ["reminderType", "triggerCondition", "targetUserId", "scheduledTime"],
              "properties": {
                "reminderType": {
                  "type": "string",
                  "enum": ["daily_scores", "medication_time", "exercise_goal", "appointment", "cpd_review", "feature_usage", "health_checkin"],
                  "description": "Type of reminder triggered"
                },
                "triggerCondition": {
                  "type": "string",
                  "enum": ["scheduled_time", "missed_deadline", "inactivity_period", "compliance_threshold", "manual_trigger", "condition_based"],
                  "description": "What triggered the reminder"
                },
                "targetUserId": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "User ID who should receive reminder"
                },
                "scheduledTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Originally scheduled reminder time"
                },
                "actualTriggerTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Actual time reminder was triggered"
                },
                "timingAccuracy": {
                  "type": "integer",
                  "description": "Difference between scheduled and actual time (seconds)"
                },
                "reminderContent": {
                  "type": "object",
                  "properties": {
                    "messageTemplate": {
                      "type": "string",
                      "description": "Template used for reminder message"
                    },
                    "personalized": {
                      "type": "boolean",
                      "description": "Whether reminder was personalized"
                    },
                    "includesCPDInfo": {
                      "type": "boolean",
                      "description": "Whether reminder includes CPD information"
                    },
                    "includesToday's": {
                      "type": "boolean",
                      "description": "Whether reminder includes today's progress"
                    }
                  }
                },
                "deliveryMethods": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["in_app", "push_notification", "email", "sms", "phone_call"]
                  },
                  "description": "Methods used to deliver reminder"
                },
                "frequency": {
                  "type": "string",
                  "enum": ["one_time", "daily", "weekly", "monthly", "custom_schedule"],
                  "description": "Reminder frequency pattern"
                },
                "isRecurring": {
                  "type": "boolean",
                  "description": "Whether this is a recurring reminder"
                },
                "previousReminderDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of previous reminder of same type"
                },
                "consecutiveReminders": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Number of consecutive reminders sent"
                },
                "maxRemindersReached": {
                  "type": "boolean",
                  "description": "Whether maximum reminder limit was reached"
                },
                "userResponseExpected": {
                  "type": "boolean",
                  "description": "Whether user response is expected"
                },
                "responseDeadline": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Deadline for user response"
                },
                "escalationPlanned": {
                  "type": "boolean",
                  "description": "Whether escalation is planned if no response"
                }
              }
            }
          }
        }
      ]
    },
    "EmergencyAlertEvent": {
      "allOf": [
        {"$ref": "#/$defs/BaseAlertEvent"},
        {
          "type": "object",
          "properties": {
            "eventType": {
              "const": "emergency_alert"
            },
            "data": {
              "type": "object",
              "required": ["emergencyType", "detectionMethod", "severityLevel", "immediateActions"],
              "properties": {
                "emergencyType": {
                  "type": "string",
                  "enum": ["suicide_ideation", "self_harm", "medical_emergency", "medication_overdose", "severe_reaction", "mental_health_crisis", "domestic_violence", "abuse_indication"],
                  "description": "Type of emergency detected"
                },
                "detectionMethod": {
                  "type": "string",
                  "enum": ["keyword_detection", "sentiment_analysis", "pattern_recognition", "manual_report", "third_party_alert", "family_contact"],
                  "description": "How emergency was detected"
                },
                "severityLevel": {
                  "type": "string",
                  "enum": ["moderate", "high", "critical", "immediate_danger"],
                  "description": "Assessed severity level"
                },
                "immediateActions": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["crisis_resources_provided", "emergency_services_contacted", "doctor_notified", "admin_alerted", "family_contacted", "conversation_escalated", "safety_plan_activated"]
                  },
                  "description": "Immediate actions taken"
                },
                "detectionConfidence": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1,
                  "description": "Confidence in emergency detection"
                },
                "sourceData": {
                  "type": "object",
                  "properties": {
                    "chatMessageId": {
                      "type": "integer",
                      "description": "ID of chat message that triggered alert"
                    },
                    "healthScoreId": {
                      "type": "integer",
                      "description": "ID of health score that triggered alert"
                    },
                    "dataPattern": {
                      "type": "string",
                      "description": "Pattern in data that triggered alert"
                    },
                    "triggerKeywords": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Keywords that triggered alert (redacted for privacy)"
                    }
                  }
                },
                "responseTeam": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "role": {
                        "type": "string",
                        "enum": ["primary_doctor", "mental_health_specialist", "admin", "crisis_counselor", "emergency_contact"]
                      },
                      "notificationMethod": {
                        "type": "string",
                        "enum": ["immediate_call", "urgent_email", "sms", "pager", "in_person"]
                      },
                      "responseTime": {
                        "type": "integer",
                        "description": "Expected response time in minutes"
                      }
                    }
                  },
                  "description": "Team members notified for emergency response"
                },
                "externalResourcesProvided": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["crisis_hotline", "emergency_services", "mental_health_services", "domestic_violence_support", "addiction_support", "family_services"]
                  },
                  "description": "External resources provided to patient"
                },
                "followUpPlan": {
                  "type": "object",
                  "properties": {
                    "immediateFollowUp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time for immediate follow-up"
                    },
                    "assignedFollowUpStaff": {
                      "type": "integer",
                      "description": "Staff member assigned for follow-up"
                    },
                    "followUpMethod": {
                      "type": "string",
                      "enum": ["phone_call", "video_consultation", "in_person_visit", "home_visit", "hospital_assessment"]
                    },
                    "monitoringLevel": {
                      "type": "string",
                      "enum": ["standard", "increased", "intensive", "continuous"],
                      "description": "Level of ongoing monitoring required"
                    }
                  }
                },
                "legalObligations": {
                  "type": "object",
                  "properties": {
                    "mandatoryReporting": {
                      "type": "boolean",
                      "description": "Whether mandatory reporting is required"
                    },
                    "authoritiesNotified": {
                      "type": "boolean",
                      "description": "Whether authorities were notified"
                    },
                    "documentationRequired": {
                      "type": "boolean",
                      "description": "Whether special documentation is required"
                    },
                    "consentOverride": {
                      "type": "boolean",
                      "description": "Whether patient consent was overridden for safety"
                    }
                  }
                },
                "patientSafetyStatus": {
                  "type": "string",
                  "enum": ["safe", "monitoring_required", "intervention_needed", "emergency_services_involved", "hospitalized"],
                  "description": "Current patient safety status"
                },
                "emergencyResolution": {
                  "type": "string",
                  "enum": ["ongoing", "stabilized", "transferred_to_professionals", "false_alarm", "resolved"],
                  "description": "Current status of emergency resolution"
                }
              }
            }
          }
        }
      ]
    }
  }
}